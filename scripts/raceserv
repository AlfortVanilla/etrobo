#!/usr/bin/env bash
#
# raceserv, ET robocon race server
#   raceserv 
# Author: jtFuruhata
# Copyright (c) 2020 ETロボコン実行委員会, Released under the MIT license
# See LICENSE
#
# fp0 ... 2020/09/13 13:00～2020/09/13 16:00
# fp1 ... 2020/09/16 12:00～2020/09/22 20:00
# fp2 ... 2020/10/17 12:00～2020/10/25 20:00
#

#
# `ver=<version>` option selects version of UnityETroboSim
#
unset sim_ver
if [ -n "`echo $1 | grep ^ver=`" ]; then
    sim_ver="ver=`echo $1 | grep ^ver= | sed -E 's/^ver=(.*)$/\1/'`"
    shift
fi

unset vm
if [ "$1" == "vm" ]; then
    vm="vm"
    shift
fi

if [ -n "$2" ] && [ "$1" == "fp0" ] || [ "$1" == "fp1" ] || [ "$1" == "fp2" ] || [ "$1" == "final" ];then
    # prepare race folder
    mode="$1"
    raceFolder="$2"
    rm -f "$raceFolder/"*.manifest
    cd "$raceFolder"

    # prepare simRunner
    unset simRunner
    if [ -n "$vm" ]; then
        simRunner=`cd "$raceFolder/../ETroboSimRunner.Relay" >/dev/null 2>&1; if [ "$?" == "0" ]; then pwd; fi`
        if [ -n "$simRunner" ]; then
            $simRunner="`echo \"$simRunner\" | sed -E 's/^\/mnt\///' | sed -E 's/^(.{1})/\U&:/' | sed -E 's/\//\\\\\\\\/g'`"
            echo "[ raceserv: entering VM mode with $simRunner ]"
        fi
    fi

    #
    # server main loop
    #
    # to stop server safely, `touch stop` on race folder
    #
    main_loop="loop"
    while [ -n "$main_loop" ]; do
        echo
        echo "[ raceserv: waiting for POST ]"
        wait_loop="loop"
        while [ -n "$wait_loop" ]; do
            sleep 1
            # raceserv stop
            if [ -f "$raceFolder/stop" ]; then
                rm -f "$raceFolder/stop"
                unset wait_loop
                unset main_loop
            fi
            # wait requests
            ls="`ls \"$raceFolder/Requests\" 2>&1`"
            ls "$raceFolder/Requests" > /dev/null 2>&1 
            if [ "$?" == "0" ] && [ -n "$ls"  ]; then
                unset wait_loop
            fi
        done
        if [ -n "$main_loop" ]; then
            #
            # invoke race
            #
            race $sim_ver $mode "$raceFolder"
            race_error="$?"

            # get zip filename from manifest
            manifest="`ls \"$raceFolder\" | grep .manifest$`"
            zipname="`echo $manifest | sed -E 's/^(.*).manifest/\1/'`"
            zip_error="$?"

            # put ERROR.txt into zip file 
            if [ "$race_error" == "1" ] || [ "$zip_error" == "1" ]; then
                echo "[ raceserv: WARNING : an error occured while race ]"
                echo "an error has occured." > ERROR.txt
                zip $zipname ERROR.txt > /dev/null
                cp -f $zipname "$raceFolder/Results/"
                rm $zipname
                rm ERROR.txt
            fi

            # request post via ETroboSimRunner.Relay
            if [ -n "$simRunner" ]; then
                cmd.exe /C "cd /D ${simRunner}&ETroboSimRunner.exe /p" >NUL 2>&1
                echo "[ raceserv: request post via ETroboSimRunner.Relay ]"
            fi
        fi
        rm -f "$raceFolder/"*.manifest
    done
else
    echo "usage: raceserv [ver=<SIM_VER>] [vm] fp1|fp2|final /path/to/raceFolder"
fi
